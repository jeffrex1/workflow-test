name: Code Review with LLM

on:
  pull_request:
    branches: [main]

jobs:
  check_code:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Or your preferred Python version

      - name: Install OpenAI
        run: |
          python -m pip install openai

      - name: Look For Changes
        id: files_changed
        run: |
          MERGE_BASE=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          FILES=$(git diff --name-only $MERGE_BASE ${{ github.sha }} | grep '.py$')
          echo "Changed files: $FILES"
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Run LLM Code Review
        id: llm_review
        run: |
          LLM_OUTPUT=""
          for file in ${{ steps.files_changed.outputs.files }}; do
            echo "--- Reviewing file: $file ---" >> llm_review_output.txt
            file_content=$(cat "$file")
            echo "$file_content" | python llm.py >> llm_review_output.txt
            echo "" >> llm_review_output.txt # Add a newline between file reviews
          done
          echo "LLM review complete. Output saved to llm_review_output.txt"
        env:
          API_KEY_REQUIRED_IF_EXECUTING_OUTSIDE_NGC: ${{ secrets.LLM_API_KEY }}

      - name: Update Pull Request Description
        if: success() || failure() # Update even if the LLM review had issues
        run: |
          PR_BODY=$(gh pr view ${{ github.event.number }} --json body --jq .body)
          LLM_REVIEW_CONTENT=$(cat llm_review_output.txt)
          NEW_PR_BODY="${PR_BODY}\n\n## LLM Code Review Results\n\n\`\`\`\n${LLM_REVIEW_CONTENT}\n\`\`\`"
          echo "$NEW_PR_BODY" > updated_pr_body.txt
          gh pr edit ${{ github.event.number }} --body-file updated_pr_body.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
